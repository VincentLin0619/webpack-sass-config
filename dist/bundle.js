(()=>{"use strict";const e=document.querySelector(".module");function t(t){e.classList.toggle("hidden")}const n=o();function o(){return JSON.parse(localStorage.getItem("listItems"))||[]}function i(e){const t=document.querySelector(".todo-list"),i=document.createElement("li");i.id="list-item",i.dataset.edit=e.id,i.dataset.delete=e.id;const c=`\n        <div class="item-container">\n        <div className="item-left">\n            <input type="checkbox"  id="completed" />\n        </div>\n        <div class="item-mid">\n            <h3>${e.title}</h3>\n            <p>${e.content}</p>\n        </div>\n        <div class="item-right">\n            <span>${e.date}</span>\n            <button class="edit-btn" data-edit="${e.id}">編輯</button>\n            <button class="delete-btn" data-delete="${e.id}">刪除</button>\n        </div>\n        </div>\n        `;i.innerHTML+=c,t.insertBefore(i,t.children[0]),-1!=t.childElementCount&&function(e){const t=e.querySelector(".delete-btn"),i=e.querySelector(".edit-btn");t.addEventListener("click",(e=>function(e){let t=document.querySelectorAll("#list-item"),o=e.target.dataset.delete;t.forEach((e=>{e.dataset.delete===o&&(e.setAttribute("class","fade-out"),e.addEventListener("transitionend",(()=>{e.remove()})))})),n.forEach(((e,t)=>{e.id===Number(o)&&(n.splice(t,1),localStorage.setItem("listItems",JSON.stringify(n)))}))}(e))),i.addEventListener("click",(e=>function(e){const t=o(),n=document.querySelector(".module").cloneNode(!0);n.classList.remove("hidden");const i=n.querySelector(".todo-title"),c=n.querySelector(".form-content"),l=n.querySelector(".form-btn");n.querySelector(".close-form-btn").addEventListener("click",(e=>{n.classList.add("hidden")})),l.innerHTML="更新",l.addEventListener("click",(e=>{e.preventDefault();const o=i.value,l=c.value,s=t.findIndex((e=>e.id.toString()===r?e:null));t[s].title=o,t[s].content=l,localStorage.setItem("listItems",JSON.stringify(t)),n.classList.add("hidden"),d()}));let r=e.target.dataset.edit;t.forEach((e=>{e.id.toString()===r&&(document.body.appendChild(n),i.value=e.title,c.value=e.content)}))}(e)))}(i)}function d(){document.querySelector(".todo-list").innerHTML="",o().forEach((e=>{i(e)}))}const c=document.querySelector(".todo-title"),l=document.querySelector(".form-content");function r(e){const t=Array.from(o()),n={title:c.value,content:l.value,date:(new Date).toLocaleDateString(),status:!1,id:(new Date).getTime()};""!==c.value?(localStorage.setItem("listItems",JSON.stringify([...t,n])),i(n),c.value="",l.value=""):alert("標題為必填")}window.onload=d,document.querySelector(".close-form-btn").addEventListener("click",(e=>t())),document.querySelector("#todo-btn").addEventListener("click",(e=>t()));const s=document.querySelector(".form-btn");s.addEventListener("click",(e=>{e.preventDefault(),r()})),s.addEventListener("keyup",(e=>{e.preventDefault(),"Enter"===e.key&&r()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,